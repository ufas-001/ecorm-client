name: CI/CD Workflow
on:
  push:
    branches:
      - main
env:
  TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
  TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
    
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Initialize Terraform
        run: terraform init
        working-directory: ./infra

      - name: Plan Terraform changes
        run: terraform plan -var="aws_access_key=${{ env.TF_VAR_aws_access_key }}" -var="aws_secret_key=${{ env.TF_VAR_aws_secret_key }}" -out=tfplan
        working-directory: ./infra

      - name: Apply Terraform changes
        run: terraform apply -auto-approve tfplan
        env:
          AWS_ACCESS_KEY_ID: ${{ env.TF_VAR_aws_access_key }}
          AWS_SECRET_ACCESS_KEY: ${{ env.TF_VAR_aws_secret_key }}
        working-directory: ./infra

      - name: Retrieve EC2 instance IP
        id: get_ec2_ip
        working-directory: ./infra
        env:
          AWS_ACCESS_KEY_ID: ${{ env.TF_VAR_aws_access_key }}
          AWS_SECRET_ACCESS_KEY: ${{ env.TF_VAR_aws_secret_key }}
        run: |
          ip=$(python -c 'import subprocess; output = subprocess.run(["terraform", "output", "-raw", "ec2_instance_ip"], capture_output=True, text=True); print(output.stdout.strip())')
          echo "::set-output name=ip::$ip"

      - name: Use EC2 instance IP
        run: |
          echo "EC2 instance IP: ${{ steps.get_ec2_ip.outputs.ip }}"
      