name: CI/CD Workflow
on:
  push:
    branches:
      - main
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-east-1
  PRIVATE_SSH_KEY: ${{secrets.AWS_PRIVATE_KEY}}

jobs:
  deploy-infra:
    runs-on: ubuntu-latest
    outputs:
      CLIENT_PUBLIC_IP: ${{ steps.set-ip.outputs.client_public_ip }}
    steps:
      - name: Checkout repository
        uses: actions/Checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: Terraform init
        id: init
        run: terraform init 
        working-directory: ./infra
      - name: Terraform plan
        id: plan
        run: |-
          terraform plan \
          -out=PLAN
        working-directory: ./infra
      - name: Terraform apply
        id: apply
        run: terraform apply PLAN
        working-directory: ./infra
      - name: Set outputs
        id: set-ip
        run: |-
          echo "::set-output name=client_public_ip::$(terraform output ec2_instance_ip)"
        working-directory: ./infra

  deploy-server:
    runs-on: ubuntu-latest
    needs: deploy-infra
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set IP env variable
        run:  |-
          echo CLIENT_PUBLIC_IP=${{ needs.deploy-infra.outputs.CLIENT_PUBLIC_IP }} >> $GITHUB_ENV
      - name: Deploy server to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.CLIENT_PUBLIC_IP }}
          username: ubuntu
          key: ${{ env.PRIVATE_SSH_KEY }}
          envs: AWS_PRIVATE_KEY,AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY
          script: |-
            sudo apt-get update
            sudo apt-get install git -y