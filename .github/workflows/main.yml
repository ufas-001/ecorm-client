name: CI/CD Workflow
on:
  push:
    branches:
      - main
env:
  TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
  TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
    
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Initialize Terraform
        run: terraform init
        working-directory: ./infra

      - name: Plan Terraform changes
        run: terraform plan -var="aws_access_key=${{ env.TF_VAR_aws_access_key }}" -var="aws_secret_key=${{ env.TF_VAR_aws_secret_key }}" -out=tfplan
        working-directory: ./infra

      - name: Apply Terraform changes
        run: terraform apply -auto-approve tfplan
        env:
          AWS_ACCESS_KEY_ID: ${{ env.TF_VAR_aws_access_key }}
          AWS_SECRET_ACCESS_KEY: ${{ env.TF_VAR_aws_secret_key }}
        working-directory: ./infra

      - name: Retrieve EC2 instance IP
        id: get_ec2_ip
        working-directory: ./infra
        env:
          AWS_ACCESS_KEY_ID: ${{ env.TF_VAR_aws_access_key }}
          AWS_SECRET_ACCESS_KEY: ${{ env.TF_VAR_aws_secret_key }}
        run: |
          ip=$(python -c 'import subprocess; output = subprocess.check_output(["terraform", "output", "-raw", "ec2_instance_ip"]); print(output.decode().strip())')
          echo "::set-output name=ip::$ip"

      - name: SSH into the EC2 instance.
        uses: appleboy/ssh-action@v0.1.5
        with:
          key: ${ secrets.AWS_PRIVATE_KEY }
          host: ${{ steps.get_ec2_ip.outputs.ip }}
          username: ubuntu          

      - name: Install Node.js
        run: |
          sudo apt-get update
          sudo apt-get install curl
          curl -s https://deb.nodesource.com/setup_16.x | sudo bash
          sudo apt install nodejs -y

      - name: Install Nginx
        run: |
          sudo apt-get update
          sudo apt-get install -y nginx
          sudo systemctl start nginx
          sudo systemctl enable nginx

      - name: Clone GitHub repository
        run: |
          sudo git clone https://github.com/ufas-001/ecorm-client.git