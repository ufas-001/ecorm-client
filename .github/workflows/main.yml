name: CI/CD Workflow
on:
  push:
    branches:
      - main
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-east-1
  PRIVATE_SSH_KEY: ${{secrets.AWS_PRIVATE_KEY}}

jobs:
  deploy-infra:
    runs-on: ubuntu-latest
    outputs:
      CLIENT_PUBLIC_IP: ${{ steps.set-ip.outputs.client_public_ip }}
      SERVER_PUBLIC_IP: ${{ steps.set-ip.outputs.server_public_ip }}
    steps:
      - name: Checkout repository
        uses: actions/Checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: Terraform init
        id: init
        run: terraform init 
        working-directory: ./infra
      - name: Terraform plan
        id: plan
        run: |-
          terraform plan \
          -out=PLAN
        working-directory: ./infra
      - name: Terraform apply
        id: apply
        run: terraform apply PLAN
        working-directory: ./infra
      - name: Set outputs
        id: set-ip
        run: |-
          echo "::set-output name=client_public_ip::$(terraform output ec2_instance_client_ip)"
          echo "::set-output name=server_public_ip::$(terraform output ec2_instance_server_ip)"
        working-directory: ./infra

  deploy-server:
    runs-on: ubuntu-latest
    needs: deploy-infra
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set IP env variable
        run:  |-
          echo SERVER_PUBLIC_IP=${{ needs.deploy-infra.outputs.SERVER_PUBLIC_IP }} >> $GITHUB_ENV
      - name: Deploy Client to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SERVER_PUBLIC_IP }}
          username: ubuntu
          key: ${{ env.PRIVATE_SSH_KEY }}
          envs: AWS_PRIVATE_KEY,AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY
          script: |-
            sudo apt-get update
            sudo apt-get install git -y
            echo "----INSTALL NODE AND NPM----"
            sudo apt-get install curl
            sudo curl -s https://deb.nodesource.com/setup_16.x | sudo bash
            sudo apt install nodejs -y
            node -v
            echo "---- INSTALL NGINX ----"
            sudo apt-get install -y nginx
            echo "---- INSTALL PM2 ----"
            sudo npm install -g pm2
            sudo pm2 startup systemd
            echo "---- ENABLE FIREWALL ----"
            sudo ufw allow OpenSSH
            sudo ufw allow 'Nginx Full'
            sudo ufw --force enable
            cd /home/ubuntu
            sudo rm -rf ecorm-mern
            git clone https://github.com/ufas-001/ecorm-server.git
            cd ecorm-server
            npm install
            sudo rm -rf .env
            sudo touch .env
            echo MONGO_URL="${secrets.MONGO_URL}" >> .env
            echo STRIPE_SECRET="${secrets.STRIPE_SECRET}" >> .env
            echo CLIENT_API= http://"${{ needs.deploy-infra.outputs.CLIENT_PUBLIC_IP }}" >> .env
            sudo rm /etc/nginx/sites-available/default
            sudo cp default /etc/nginx/sites-available/ -r
            sudo pm2 kill
            pm2 start server.js
            sudo systemctl kill nginx || true
            sudo systemctl restart nginx
            sudo systemctl enable nginx

  deploy-client:
    runs-on: ubuntu-latest
    needs: [deploy-infra, deploy-server]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set IP env variable
        run:  |-
          echo CLIENT_PUBLIC_IP=${{ needs.deploy-infra.outputs.CLIENT_PUBLIC_IP }} >> $GITHUB_ENV
      - name: Deploy Client to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.CLIENT_PUBLIC_IP }}
          username: ubuntu
          key: ${{ env.PRIVATE_SSH_KEY }}
          envs: AWS_PRIVATE_KEY,AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY
          script: |-
            sudo apt-get update
            sudo apt-get install git -y
            echo "----INSTALL NODE AND NPM----"
            sudo apt-get install curl
            sudo curl -s https://deb.nodesource.com/setup_16.x | sudo bash
            sudo apt install nodejs -y
            node -v
            echo "---- INSTALL NGINX ----"
            sudo apt-get install -y nginx
            echo "---- INSTALL PM2 ----"
            sudo npm install -g pm2
            sudo pm2 startup systemd
            echo "---- ENABLE FIREWALL ----"
            sudo ufw allow OpenSSH
            sudo ufw allow 'Nginx Full'
            sudo ufw --force enable
            cd /home/ubuntu
            sudo rm -rf ecorm-client
            git clone https://github.com/ufas-001/ecorm-client.git
            cd ecorm-client
            npm install
            sudo rm -rf .env
            sudo touch .env
            echo REACT_APP_BASE_URL=http://"${{needs.deploy-infra.outputs.SERVER_PUBLIC_IP}}"
            sudo rm -rf build
            npm run build
            sudo pm2 delete react-build || true
            pm2 serve build/ 3001 -f --name "react-build" --spa
            sudo rm -rf /etc/nginx/sites-enabled/default
            sudo cp -r default /etc/nginx/sites-enabled/
            sudo systemctl restart nginx
            sudo systemctl enable nginx

  